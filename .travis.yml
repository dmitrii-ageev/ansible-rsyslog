---
language: python
python: "2.7"

matrix:
  include:
    - os: linux
      dist: xenial
      env: ANSIBLE_VERSION=latest
    - os: linux
      dist: jessie
      env: ANSIBLE_VERSION=latest
    - os: linux
      dist: stretch
      env: ANSIBLE_VERSION=latest
    - os: linux
      os_type: centos
      os_version: 7
      env: ANSIBLE_VERSION=latest
    - os: linux
      dist: xenial
      env: ANSIBLE_VERSION=2.4.0.0
    - os: linux
      dist: jessie
      env: ANSIBLE_VERSION=2.4.0.0
    - os: linux
      dist: stretch
      env: ANSIBLE_VERSION=2.4.0.0
    - os: linux
      os_type: centos
      os_version: 7
      env: ANSIBLE_VERSION=2.4.0.0



before_install:
  - sudo apt-get update -qq


install:
  # Install ansible
  - if [ "$ANSIBLE_VERSION" == "latest" ]; then pip install ansible; else pip install ansible==$ANSIBLE_VERSION; fi
 
  # Check ansible version
  - ansible --version

  # Install ansible-lint
  - pip install ansible-lint

  # Install ansible-review
  - pip install ansible-review

  # Create ansible.cfg with correct roles_path
  - printf '[defaults]\nroles_path = ../' > ansible.cfg

script:
  # Download depended roles
  - if [ -f tests/requirements.yml ]; then ansible-galaxy install -r tests/requirements.yml; fi

  # Basic role syntax check
  - ansible-lint tests/test.yml
  - ansible-review tests/test.yml
  - ansible-playbook -i tests/inventory --syntax-check tests/test.yml

  # Run the role/playbook with ansible-playbook
  - ansible-playbook -i tests/inventory --connection=local --become -vvvv tests/test.yml

  # Run the role/playbook again, checking to make sure it's idempotent
  - >
    ansible-playbook -i tests/inventory --connection=local --become -vvvv tests/test.yml 
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
...
